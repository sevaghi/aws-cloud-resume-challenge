{
  "version": 3,
  "sources": ["../../hotkeypad/dist/utils.js", "../../hotkeypad/dist/index.js"],
  "sourcesContent": ["/**\n * Create a new element with the given tag and props\n * @param tag The tag of the element\n * @param props The props of the element\n * @returns The created element\n */\nexport function createElement(tag, props) {\n    const element = document.createElement(tag);\n    if (props && typeof props === \"string\" && props !== \"\")\n        element.textContent = props;\n    if (props && typeof props === \"object\")\n        Object.keys(props).forEach((key) => {\n            element.setAttribute(key, props[key]);\n        });\n    return element;\n}\n/**\n * Create a new listener for the given element and event\n * @param element The element to listen to\n * @param event The event to listen for\n * @param callback The callback to execute\n */\nexport function createListener(element, event, callback) {\n    element.addEventListener(event, callback);\n}\n/**\n * Extract the valid letter from the hotkey\n * @param hotkey The hotkey to extract the letter from\n * @returns The activation letter in uppercase\n * @example\n * extractHotkey(\"Control + D\") // \"D\"\n * extractHotkey(\"control + shift + l\") // \"L\"\n */\nexport function extractHotkeyLetter(hotkey) {\n    const key = hotkey.match(/\\w+$/)?.[0] ?? \"\";\n    return key === \"\" || key.length > 1 ? \"\" : key.toUpperCase();\n}\nconst VALID_META_KEYS = [\"Control\", \"Shift\", \"Alt\", \"Meta\"];\nconst NOT_ALLOWED_HOTKEYS = [\n    \"Control+T\",\n    \"Control+Shift+T\",\n    \"Control+W\",\n    \"Control+Shift+W\",\n    \"Control+N\",\n    \"Control+Shift+N\",\n    \"Control+Tab\",\n    \"Control+Shift+Tab\",\n    \"Meta+T\",\n    \"Meta+Shift+T\",\n    \"Meta+W\",\n    \"Meta+Shift+W\",\n    \"Meta+N\",\n    \"Meta+Shift+N\",\n    \"Meta+Tab\",\n    \"Meta+Shift+Tab\"\n];\n/**\n * Validate the given hotkey\n * @param hotkey The hotkey to verify\n * @returns Whether the hotkey is valid or not\n */\nexport function isValidHotkey(hotkey) {\n    const keys = hotkey.match(/\\w+/g) ?? [];\n    if (keys.length === 0)\n        return false;\n    const hotkeyString = keys\n        .map((key) => {\n        if (key.toUpperCase() === \"CTRL\")\n            return \"Control\";\n        if (key.toUpperCase() === \"CMD\")\n            return \"Meta\";\n        return key[0].toUpperCase() + key.slice(1).toLowerCase();\n    })\n        .join(\"+\");\n    return (!NOT_ALLOWED_HOTKEYS.includes(hotkeyString) &&\n        hotkeyString\n            .split(\"+\")\n            .slice(0, -1)\n            .every((key) => VALID_META_KEYS.includes(key)));\n}\n", "import { createElement, createListener, extractHotkeyLetter, isValidHotkey } from \"./utils\";\nexport default class HotKeyPad {\n    instance;\n    #backdrop = null;\n    #container = null;\n    #commands = [];\n    currentIndex = 0;\n    #closeKey = \"Escape\";\n    #activationKey;\n    #activationLetter = \"K\";\n    #placeholder = \"Search command\";\n    #svgIconColor = \"black\";\n    #observer = new MutationObserver(this.#observeClassChanges.bind(this));\n    constructor({ closeKey, placeholder, activationLetter } = {}) {\n        if (document.getElementById(\"hotkeypad\") == null) {\n            throw new Error(\"HotKeyPad instance not found in the DOM\");\n        }\n        this.instance = document.getElementById(\"hotkeypad\");\n        this.#activationKey = navigator.userAgent.includes(\"Macintosh\")\n            ? \"Cmd\"\n            : \"Ctrl\";\n        if (closeKey && closeKey !== \"\")\n            this.#closeKey = closeKey;\n        if (placeholder && placeholder !== \"\")\n            this.#placeholder = placeholder;\n        if (activationLetter && activationLetter !== \"\")\n            this.#activationLetter = activationLetter;\n        this.#checkTagOptions();\n        this.#init();\n        return this;\n    }\n    /* CONFIGURATION METHODS */\n    #init() {\n        // Listen for the activation key\n        createListener(document, \"keydown\", (event) => {\n            const keyCode = `Key${this.#activationLetter.toUpperCase()}`;\n            if (event.code === keyCode && (event.metaKey || event.ctrlKey)) {\n                event.preventDefault();\n                this.#isOpen ? this.close() : this.open();\n            }\n            if (event.key.toLowerCase() === this.#closeKey.toLowerCase())\n                this.close();\n        });\n        // Observe the class changes on the hotkeypad instance\n        this.#observer.observe(this.instance, {\n            attributes: true,\n            attributeFilter: [\"class\"],\n            childList: false,\n            characterData: false\n        });\n        // Render first blocks of the hotkeypad\n        this.#createBackdrop();\n        this.#createContainer();\n        this.#createHeader();\n        this.#createFooter();\n    }\n    #checkTagOptions() {\n        if (this.instance.hasAttribute(\"data-placeholder\") &&\n            this.instance.getAttribute(\"data-placeholder\") !== \"\") {\n            this.#placeholder = this.instance.getAttribute(\"data-placeholder\");\n        }\n        if (this.instance.hasAttribute(\"data-activation-letter\") &&\n            this.instance.getAttribute(\"data-activation-letter\") !== \"\") {\n            this.#activationLetter = this.instance.getAttribute(\"data-activation-letter\").toUpperCase();\n        }\n        if (this.instance.hasAttribute(\"data-close-key\") &&\n            this.instance.getAttribute(\"data-close-key\") !== \"\") {\n            this.#closeKey = this.instance.getAttribute(\"data-close-key\").toUpperCase();\n        }\n    }\n    #observeClassChanges(event) {\n        const { attributeName, target } = event[0];\n        if (attributeName === \"class\") {\n            if (target.classList.contains(\"dark\"))\n                this.#svgIconColor = \"white\";\n            else\n                this.#svgIconColor = \"black\";\n            this.#renderCommands();\n        }\n    }\n    #setListeners() {\n        // Listen for hotkey combinations registered in the hotkeypad\n        createListener(this.instance, \"keydown\", (event) => {\n            if (event.metaKey || event.ctrlKey) {\n                this.#commands.find(({ hotkey, handler }) => {\n                    const keyLetter = extractHotkeyLetter(hotkey);\n                    const keyCode = `Key${keyLetter}`;\n                    if (event.code === keyCode) {\n                        event.preventDefault();\n                        if (handler != null)\n                            setTimeout(() => handler(), 200);\n                        this.close();\n                    }\n                    return false;\n                });\n            }\n        });\n        // Listen for click events on the items\n        createListener(this.#container, \"click\", (event) => {\n            const item = event.target;\n            if (item.tagName === \"LI\")\n                this.#activateItem(item);\n            if (item.parentElement?.tagName === \"LI\")\n                this.#activateItem(item.parentElement);\n        });\n        // Listen for the mouse over event on the items\n        createListener(this.#container, \"mouseover\", (event) => {\n            const item = event.target;\n            if (item.tagName === \"LI\") {\n                this.#items.forEach((item) => item.removeAttribute(\"data-active\"));\n                item.setAttribute(\"data-active\", \"\");\n            }\n        });\n        // Listen for the keyboard navigation events\n        createListener(this.#container, \"keydown\", (event) => {\n            const items = this.#items;\n            this.currentIndex = Array.from(items).findIndex((item) => item.hasAttribute(\"data-active\"));\n            this.currentIndex = this.currentIndex === -1 ? 0 : this.currentIndex;\n            let nextIndex = 0;\n            if (event.key === \"Enter\") {\n                event.preventDefault();\n                this.#activateItem(items[this.currentIndex]);\n                items[this.currentIndex].removeAttribute(\"data-active\");\n                this.currentIndex = 0;\n            }\n            if (event.key === \"ArrowUp\") {\n                event.preventDefault();\n                nextIndex =\n                    this.currentIndex - 1 < 0 ? items.length - 1 : this.currentIndex - 1;\n            }\n            if (event.key === \"ArrowDown\") {\n                event.preventDefault();\n                nextIndex =\n                    this.currentIndex + 1 > items.length - 1 ? 0 : this.currentIndex + 1;\n            }\n            if (event.key === \"Tab\") {\n                event.preventDefault();\n                nextIndex =\n                    this.currentIndex + 1 > items.length - 1 ? 0 : this.currentIndex + 1;\n            }\n            items[this.currentIndex].removeAttribute(\"data-active\");\n            items[nextIndex].setAttribute(\"data-active\", \"\");\n        });\n        // Listen for the search input\n        createListener(this.#container, \"input\", (event) => {\n            const input = event.target;\n            const value = input.value.toLowerCase();\n            const sections = this.#container.querySelectorAll(\"[data-section]\");\n            sections.forEach((section) => {\n                const list = section.querySelector(\"ul\");\n                const items = list.querySelectorAll(\"li\");\n                items.forEach((item) => {\n                    const title = item.querySelector(\"p\").innerText.toLowerCase();\n                    if (title.includes(value))\n                        item.style.display = \"flex\";\n                    else\n                        item.style.display = \"none\";\n                });\n                const visibleItems = list.querySelectorAll(\"li[style='display: flex;']\");\n                if (visibleItems.length === 0)\n                    section.style.display = \"none\";\n                else\n                    section.style.display = \"block\";\n            });\n        });\n    }\n    /* HELPER METHODS */\n    /**\n     * Activate the item with the corresponding hotkey\n     * @param item The item to activate\n     * @executes The handler of the item\n     */\n    #activateItem(item) {\n        this.#commands.find(({ hotkey, handler }) => {\n            if (item.getAttribute(\"data-hotkey\") === hotkey) {\n                if (handler != null)\n                    setTimeout(() => handler(), 200);\n                this.close();\n            }\n            return false;\n        });\n    }\n    /**\n     * Verify the commands array\n     * @param commands The commands array to verify\n     * @returns The verified commands array\n     * @throws An error if the commands array is not valid\n     */\n    #verifyCommands(commands) {\n        if (commands.length === 0)\n            throw new Error(\"The commands array cannot be empty\");\n        commands.forEach((command) => {\n            if (command.id === \"\" ||\n                command.title === \"\" ||\n                command.hotkey === \"\" ||\n                command.handler == null)\n                throw new Error(\"The command object is not valid. It should contain an id, title, hotkey and handler\");\n            if (!isValidHotkey(command.hotkey))\n                throw new Error(\"The hotkey is not valid. It should only contain CTRL, CMD, ALT, SHIFT and a letter. Also it cannot contain browser or system reserved hotkeys such as CTRL+T, CTRL+N, CTRL+W, etc.\");\n            if (command.icon != null && typeof command.icon !== \"string\")\n                throw new Error(\"The icon should be a string\");\n            const keys = command.hotkey.match(/\\w+/g) ?? [];\n            if (keys.length > 2)\n                throw new Error(\"The hotkey only supports 2 keys maximum\");\n        });\n        return commands;\n    }\n    /* PUBLIC METHODS */\n    open() {\n        window.dispatchEvent(new CustomEvent(\"hotkeypad:open\")); // Allow to listen for the open event\n        this.instance.style.opacity = \"1\";\n        this.instance.style.visibility = \"visible\";\n        this.instance.style.pointerEvents = \"auto\";\n        setTimeout(() => this.#container.querySelector(\"input\").focus(), 200);\n    }\n    close() {\n        window.dispatchEvent(new CustomEvent(\"hotkeypad:close\")); // Allow to listen for the close event\n        this.instance.style.opacity = \"0\";\n        this.instance.style.visibility = \"hidden\";\n        this.instance.style.pointerEvents = \"none\";\n        this.#container.querySelector(\"input\").value = \"\";\n        this.#container.removeEventListener(\"keydown\", () => { });\n        this.#container.removeEventListener(\"mouseover\", () => { });\n        this.#container.removeEventListener(\"input\", () => { });\n    }\n    setCommands(commands) {\n        this.#commands = this.#verifyCommands(commands);\n        this.#renderCommands();\n        this.#setListeners();\n    }\n    /* GETTERS */\n    get #isOpen() {\n        return this.instance.style.visibility === \"visible\";\n    }\n    get activationKey() {\n        return this.#activationKey;\n    }\n    get #sections() {\n        const map = new Map();\n        this.#commands.forEach((item) => {\n            const key = typeof item.section !== \"string\" || item.section === \"\"\n                ? \"Unlisted\"\n                : item.section;\n            const { section, ...content } = item;\n            const collection = map.get(key);\n            if (!collection)\n                map.set(key, [content]);\n            else\n                collection.push(content);\n        });\n        return Array.from(map);\n    }\n    get #items() {\n        return this.#container.querySelectorAll(\"li\");\n    }\n    /* ICON METHODS */\n    #iconURL(icon) {\n        return `https://cdn.simpleicons.org/${icon}/${this.#svgIconColor}`;\n    }\n    #isCustomIcon(icon) {\n        return (/<svg/.test(icon) || /<img/.test(icon) || /<i/.test(icon) || icon === \"\");\n    }\n    /* RENDERING METHODS */\n    #createBackdrop() {\n        this.#backdrop = createElement(\"div\", {\n            \"data-backdrop\": \"\",\n            \"aria-hidden\": \"true\"\n        });\n        createListener(this.#backdrop, \"click\", () => this.close());\n        this.instance.appendChild(this.#backdrop);\n    }\n    #createContainer() {\n        this.#container = createElement(\"div\", { \"data-container\": \"\" });\n        this.instance.appendChild(this.#container);\n    }\n    #createHeader() {\n        const headerEl = createElement(\"header\");\n        const inputEl = createElement(\"input\", {\n            type: \"text\",\n            placeholder: this.#placeholder,\n            \"aria-label\": this.#placeholder,\n            autocomplete: \"off\",\n            spellcheck: \"false\"\n        });\n        headerEl.appendChild(inputEl);\n        this.#container.appendChild(headerEl);\n    }\n    #createFooter() {\n        const footerEl = createElement(\"footer\");\n        const keyEnter = createElement(\"kbd\", \"↩\");\n        const keyUp = createElement(\"kbd\", \"↑\");\n        const keyDown = createElement(\"kbd\", \"↓\");\n        const keyEsc = createElement(\"kbd\", this.#closeKey);\n        const keyCmdK = createElement(\"kbd\", `${this.#activationKey} + ${this.#activationLetter}`);\n        const pEnter = createElement(\"p\", \" to select\");\n        const pUpDown = createElement(\"p\", \" to navigate\");\n        const pCmdK = createElement(\"p\", \" to close\");\n        pEnter.prepend(keyEnter);\n        pUpDown.prepend(keyUp, keyDown);\n        pCmdK.prepend(keyCmdK, keyEsc);\n        footerEl.append(pEnter, pUpDown, pCmdK);\n        this.#container.appendChild(footerEl);\n    }\n    #createSections() {\n        const sectionsEl = createElement(\"div\");\n        sectionsEl.setAttribute(\"data-sections\", \"\");\n        this.#sections.forEach(([section, commands]) => {\n            const sectionEl = createElement(\"div\");\n            sectionEl.setAttribute(\"data-section\", section.toLowerCase());\n            if (section !== \"Unlisted\") {\n                const titleEl = createElement(\"h4\", section);\n                sectionEl.appendChild(titleEl);\n            }\n            const listEl = createElement(\"ul\");\n            commands.forEach(({ title, icon, hotkey }) => {\n                const keys = hotkey.split(\"+\").map((key) => key.trim());\n                if (icon == null)\n                    icon = \"\";\n                const stringIcon = this.#isCustomIcon(icon)\n                    ? icon\n                    : `<img src=\"${this.#iconURL(icon)}\" alt=\"${title}\" />`;\n                const itemEl = createElement(\"li\");\n                itemEl.setAttribute(\"data-hotkey\", hotkey);\n                itemEl.setAttribute(\"tabindex\", \"0\");\n                if (stringIcon !== \"\") {\n                    const itemIcon = createElement(\"span\");\n                    itemIcon.innerHTML = stringIcon;\n                    itemEl.appendChild(itemIcon);\n                }\n                const itemTitle = createElement(\"p\");\n                itemTitle.append(title);\n                const itemKeys = createElement(\"div\");\n                keys.forEach((key) => {\n                    const keyEl = createElement(\"span\", key);\n                    itemKeys.appendChild(keyEl);\n                });\n                itemEl.appendChild(itemTitle);\n                itemEl.appendChild(itemKeys);\n                listEl.appendChild(itemEl);\n            });\n            sectionEl.appendChild(listEl);\n            sectionsEl.appendChild(sectionEl);\n        });\n        // Append the sections between the header and footer\n        this.#container.insertBefore(sectionsEl, this.#container.lastChild);\n    }\n    #renderCommands() {\n        // Remove the previous sections and insert after the header\n        const sectionsEl = this.#container.querySelector(\"[data-sections]\");\n        if (sectionsEl)\n            sectionsEl.remove();\n        this.#createSections();\n        this.#items[0].setAttribute(\"data-active\", \"\");\n    }\n}\n"],
  "mappings": "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",
  "names": ["item"]
}
